rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAllowedSize() {
      // 5MB for images, 10MB for documents
      return (request.resource.contentType.matches('image/.*') && request.resource.size < 5 * 1024 * 1024) ||
             (!request.resource.contentType.matches('image/.*') && request.resource.size < 10 * 1024 * 1024);
    }
    
    function isAllowedType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
             request.resource.contentType.matches('text/plain');
    }
    
    // Users can only access files in their own folder
    match /{userId}/files/{allPaths=**} {
      // Allow read only if the user is the owner
      allow read: if isOwner(userId);
      
      // Allow write and delete only if user is owner AND file meets size/type requirements
      allow write: if isOwner(userId) && isAllowedSize() && isAllowedType();
      allow delete: if isOwner(userId);
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}